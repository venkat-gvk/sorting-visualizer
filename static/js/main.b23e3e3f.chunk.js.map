{"version":3,"sources":["components/NavBar.module.css","components/Main.module.css","components/utility/util.js","components/NavBar.jsx","components/algo/BubbleSort.jsx","components/algo/SelectionSort.jsx","components/algo/InsertionSort.jsx","components/algo/MergeSort.jsx","components/algo/QuickSort.jsx","components/Animate.jsx","components/Main.jsx","App.js","index.js"],"names":["module","exports","generateRandomNumbers","min","max","Math","floor","random","NavBar","props","useState","inputRange","setInputRange","disabled","setDisabled","speed","setSpeed","setInputArray","sort","console","log","shuffle","t","i","push","generateNewInput","useEffect","trigger","name","style","styles","button","className","text","heading","onClick","input","s","htmlFor","id","type","value","step","onChange","e","target","navigation","BubbleSort","inputArray","newArray","animations","length","j","SelectionSort","InsertionSort","MergeSort","mergesort","arr","start","end","middle","result","k","merge","QuickSort","swap","firstIndex","secondIndex","temp","quickSort","pivot","tail","partition","animate","ani","divs","str","idx1","idx2","color","setTimeout","backgroundColor","idx","heights","height","Main","val","Main__container","map","ref","el","width","key","App","ReactDOM","render","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,KAAO,qBAAqB,WAAa,2BAA2B,EAAI,kBAAkB,OAAS,uBAAuB,SAAW,2B,oBCAzND,EAAOC,QAAU,CAAC,KAAO,mBAAmB,gBAAkB,8BAA8B,WAAa,2B,gJCD5FC,EAAwB,SAACC,EAAKC,GACzC,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,G,oBC2FxCK,EAxFA,SAAAC,GAAU,IAAD,EACcC,mBAAS,IADvB,mBACfC,EADe,KACHC,EADG,OAEUF,oBAAS,GAFnB,mBAEfG,EAFe,KAELC,EAFK,OAGIJ,mBAAS,OAHb,mBAGfK,EAHe,KAGRC,EAHQ,KAIdC,EAAwBR,EAAxBQ,cAAeC,EAAST,EAATS,KAEvBC,QAAQC,IAAIL,GAEZ,IAIMM,EAAU,WACd,IAAMC,EDbH,SAA0BX,GAE/B,IADA,IAAMW,EAAI,GACDC,EAAI,EAAGA,EAAIZ,EAAYY,IAAKD,EAAEE,KAAKtB,EAAsB,GAAI,MACtE,OAAOoB,ECUKG,CAAiBd,GAC3BM,EAAcK,IAGhBI,qBAAU,WACRL,MACC,CAACV,IAEJ,IAAMgB,EAAU,SAAAC,GACdd,GAAY,GACZI,EAAKU,EAAM,IAAMb,EAAOD,IAGpBe,EAAQhB,EAAWiB,IAAOjB,SAAWiB,IAAOC,OAElD,OACE,yBAAKC,UAAWF,IAAOtB,QACrB,wBAAIwB,UAAWF,IAAOG,MAAtB,sBACA,yBAAKD,UAAWF,IAAOI,SACrB,4BAAQF,UAAWH,EAAOM,QAASd,GAAnC,WAIA,yBAAKW,UAAWF,IAAOM,OACrB,2BAAOJ,UAAWF,IAAOO,EAAGC,QAAQ,SAApC,cAGA,2BACEN,UAAWF,IAAOO,EAClBE,GAAG,QACH1B,SAAUA,EACV2B,KAAK,QACLrC,IAAI,KACJC,IAAI,MACJqC,MAAO9B,EACP+B,KAAK,KACLC,SAzCe,SAAAC,GACvBhC,EAAcgC,EAAEC,OAAOJ,UA0CjB,2BAAOT,UAAWF,IAAOO,EAAGC,QAAQ,SAApC,SAGA,2BACEN,UAAWF,IAAOO,EAClBE,GAAG,QACHC,KAAK,QACLrC,IAAI,MACJC,IAAI,MACJsC,KAAK,MACLD,MAAO1B,EACPF,SAAUA,EACV8B,SAAU,SAAAC,GAAC,OAAI5B,EAAS4B,EAAEC,OAAOJ,YAIvC,yBAAKT,UAAWF,IAAOgB,YACrB,4BAAQd,UAAWH,EAAOM,QAAS,kBAAMR,EAAQ,SAAjD,eAGA,4BAAQK,UAAWH,EAAOM,QAAS,kBAAMR,EAAQ,SAAjD,kBAGA,4BAAQK,UAAWH,EAAOM,QAAS,kBAAMR,EAAQ,SAAjD,kBAGA,4BAAQK,UAAWH,EAAOM,QAAS,kBAAMR,EAAQ,QAAjD,cAGA,4BAAQK,UAAWH,EAAOM,QAAS,kBAAMR,EAAQ,SAAjD,iB,uBC5DOoB,EAxBI,SAAAC,GAIjB,IAHA,IAAMC,EAAQ,YAAOD,GACjBE,EAAa,GAER3B,EAAI,EAAGA,EAAI0B,EAASE,OAAQ5B,IACnC,IAAK,IAAI6B,EAAI,EAAGA,EAAIH,EAASE,OAAS5B,EAAI,EAAG6B,IAM3C,GAJAF,EAAW1B,KAAK,CAAC,cAAe4B,EAAGA,EAAI,IAEvCF,EAAW1B,KAAK,CAAC,QAAS4B,EAAGA,EAAI,IAE7BH,EAASG,GAAKH,EAASG,EAAI,GAAI,CACjCF,EAAW1B,KAAK,CAAC,OAAQ4B,EAAGH,EAASG,EAAI,KACzCF,EAAW1B,KAAK,CAAC,OAAQ4B,EAAI,EAAGH,EAASG,KAEzC,IAAM9B,EAAI2B,EAASG,GACnBH,EAASG,GAAKH,EAASG,EAAI,GAC3BH,EAASG,EAAI,GAAK9B,EAIxB,OAAO4B,GCMMG,EA3BO,SAAAL,GAIpB,IAHA,IAAMC,EAAQ,YAAOD,GACfE,EAAa,GAEV3B,EAAI,EAAGA,EAAI0B,EAASE,OAAS,EAAG5B,IAAK,CAG5C,IAFA,IAAIpB,EAAMoB,EAED6B,EAAI7B,EAAI,EAAG6B,EAAIH,EAASE,OAAQC,IAEvCF,EAAW1B,KAAK,CAAC,cAAerB,EAAKiD,IAErCF,EAAW1B,KAAK,CAAC,QAASrB,EAAKiD,IAE3BH,EAAS9C,GAAO8C,EAASG,KAAIjD,EAAMiD,GAGzCF,EAAW1B,KAAK,CAAC,OAAQD,EAAG0B,EAAS9C,KACrC+C,EAAW1B,KAAK,CAAC,OAAQrB,EAAK8C,EAAS1B,KAEvC,IAAID,EAAI2B,EAAS9C,GACjB8C,EAAS9C,GAAO8C,EAAS1B,GACzB0B,EAAS1B,GAAKD,EAGhB,OAAO4B,GCgBMI,EAxCO,SAAAN,GAIpB,IAHA,IAAMC,EAAQ,YAAOD,GACjBE,EAAa,GAER3B,EAAI,EAAGA,EAAI0B,EAASE,OAAQ5B,IAAK,CACxC,IAAI6B,EAAI7B,EAAI,EAOZ,GAJA2B,EAAW1B,KAAK,CAAC,cAAeD,EAAG6B,IAEnCF,EAAW1B,KAAK,CAAC,QAASD,EAAG6B,IAEzBH,EAASG,GAAKH,EAAS1B,GAAI,CAC7B2B,EAAW1B,KAAK,CAAC,OAAQD,EAAG0B,EAASG,KACrCF,EAAW1B,KAAK,CAAC,OAAQ4B,EAAGH,EAAS1B,KAErC,IAAMD,EAAI2B,EAASG,GAInB,IAHAH,EAASG,GAAKH,EAAS1B,GACvB0B,EAAS1B,GAAKD,EAEP8B,EAAI,IACTF,EAAW1B,KAAK,CAAC,cAAe4B,EAAGA,EAAI,IAEvCF,EAAW1B,KAAK,CAAC,QAAS4B,EAAGA,EAAI,IAE7BH,EAASG,GAAKH,EAASG,EAAI,KALnB,CAMVF,EAAW1B,KAAK,CAAC,OAAQ4B,EAAGH,EAASG,EAAI,KACzCF,EAAW1B,KAAK,CAAC,OAAQ4B,EAAI,EAAGH,EAASG,KAEzC,IAAM9B,EAAI2B,EAASG,GACnBH,EAASG,GAAKH,EAASG,EAAI,GAC3BH,EAASG,EAAI,GAAK9B,EAEpB8B,MAIN,OAAOF,GCmBMK,EAxDG,SAAAP,GAChB,IAAIC,EAAQ,YAAOD,GACfE,EAAa,GAmDjB,OAjDA,SAASM,EAAUC,EAAKC,EAAOC,GAC7B,GAAID,EAAQC,EAAK,CACf,IAAMC,EAASvD,KAAKC,OAAOoD,EAAQC,GAAO,GAC1CH,EAAUC,EAAKC,EAAOE,GACtBJ,EAAUC,EAAKG,EAAS,EAAGD,GAM/B,SAAeF,EAAKC,EAAOE,EAAQD,GACjC,IAAIpC,EAAImC,EACNN,EAAIQ,EAAS,EACXC,EAAS,GAEb,KAAOtC,GAAKqC,GAAUR,GAAKO,GAEzBT,EAAW1B,KAAK,CAAC,cAAeD,EAAG6B,IAEnCF,EAAW1B,KAAK,CAAC,QAASD,EAAG6B,IAEzBK,EAAIlC,GAAKkC,EAAIL,GAAIS,EAAOrC,KAAKiC,EAAIlC,MAChCsC,EAAOrC,KAAKiC,EAAIL,MAGvB,KAAO7B,GAAKqC,EAAQrC,IAElB2B,EAAW1B,KAAK,CAAC,cAAeD,EAAGA,IAEnC2B,EAAW1B,KAAK,CAAC,QAASD,EAAGA,IAC7BsC,EAAOrC,KAAKiC,EAAIlC,IAElB,KAAO6B,GAAKO,EAAKP,IAEfF,EAAW1B,KAAK,CAAC,cAAe4B,EAAGA,IAEnCF,EAAW1B,KAAK,CAAC,QAAS4B,EAAGA,IAC7BS,EAAOrC,KAAKiC,EAAIL,IAGlB,IAAK,IAAIU,EAAIJ,EAAON,EAAI,EAAGU,GAAKH,EAAKG,IAAKV,IACxCF,EAAW1B,KAAK,CAAC,cAAesC,EAAGV,IACnCF,EAAW1B,KAAK,CAAC,WAAYsC,EAAGD,EAAOT,KACvCF,EAAW1B,KAAK,CAAC,cAAesC,EAAGV,IACnCK,EAAIK,GAAKD,EAAOT,GAtChBW,CAAMN,EAAKC,EAAOE,EAAQD,IA0C9BH,CAAUP,EAAU,EAAGA,EAASE,OAAS,GAClCD,GCMMc,EAzDG,SAAAhB,GAChB,IAAMC,EAAQ,YAAOD,GACjBE,EAAa,GA6CjB,SAASe,EAAKhB,EAAUiB,EAAYC,GAClC,IAAIC,EAAOnB,EAASiB,GACpBjB,EAASiB,GAAcjB,EAASkB,GAChClB,EAASkB,GAAeC,EAI1B,OAlDA,SAASC,EAAUpB,EAAUS,EAAOC,GAClC,IAAIW,EACAZ,EAAQC,IAEVU,EAAUpB,EAAUS,GADpBY,EAMJ,SAAmBrB,EAAUS,EAAOC,GAClC,IAAIW,EAAQpE,EAAsBwD,EAAOC,GAEzCT,EAAW1B,KAAK,CAAC,cAAe8C,EAAOX,IACvCT,EAAW1B,KAAK,CAAC,OAAQ8C,EAAOrB,EAASU,KACzCT,EAAW1B,KAAK,CAAC,OAAQmC,EAAKV,EAASqB,KACvCpB,EAAW1B,KAAK,CAAC,QAAS8C,EAAOX,IACjCM,EAAKhB,EAAUqB,EAAOX,GAItB,IAFA,IAAIY,EAAOb,EAEFnC,EAAImC,EAAOnC,EAAIoC,IAAOpC,EAC7B2B,EAAW1B,KAAK,CAAC,cAAeD,EAAGoC,IACnCT,EAAW1B,KAAK,CAAC,QAASD,EAAGoC,IAEzBV,EAAS1B,IAAM0B,EAASU,KAC1BT,EAAW1B,KAAK,CAAC,cAAeD,EAAGgD,IACnCrB,EAAW1B,KAAK,CAAC,OAAQD,EAAG0B,EAASsB,KACrCrB,EAAW1B,KAAK,CAAC,OAAQ+C,EAAMtB,EAAS1B,KACxC2B,EAAW1B,KAAK,CAAC,QAASD,EAAGgD,IAC7BN,EAAKhB,EAAU1B,EAAGgD,GAClBA,KAUJ,OANArB,EAAW1B,KAAK,CAAC,cAAe+C,EAAMZ,IACtCT,EAAW1B,KAAK,CAAC,OAAQmC,EAAKV,EAASsB,KACvCrB,EAAW1B,KAAK,CAAC,OAAQ+C,EAAMtB,EAASU,KACxCT,EAAW1B,KAAK,CAAC,QAAS+C,EAAMZ,IAEhCM,EAAKhB,EAAUsB,EAAMZ,GACdY,EArCGC,CAAUvB,EAAUS,EAAOC,IACA,GACnCU,EAAUpB,EAAUqB,EAAQ,EAAGX,IA4CnCU,CAAUpB,EAAU,EAAGA,EAASE,OAAS,GAClCD,GCxDIuB,EAAU,SAAUC,EAAKC,EAAM5D,EAAOD,GACjD,IAAK,IAAIS,EAAI,EAAGA,EAAImD,EAAIvB,OAAQ5B,IAAK,CAAC,IAC7BqD,EAD4B,YACrBF,EAAInD,GADiB,MAGvB,gBAARqD,GAAiC,UAARA,EAAkB,WAAD,kBACrBF,EAAInD,GADiB,GACnCsD,EADmC,KAC7BC,EAD6B,KAGxCC,OAAK,EACG,gBAARH,EAAuBG,EAAQ,aAClB,UAARH,IAAiBG,EAAQ,cAElCC,YAAW,WACTL,EAAKE,GAAMhD,MAAMoD,gBAAkBF,EACnCJ,EAAKG,GAAMjD,MAAMoD,gBAAkBF,IAClCxD,EAAIR,GAVsC,GAWvC,WAAD,kBACoB2D,EAAInD,GADxB,GACI2D,EADJ,KACSC,EADT,KAELH,YAAW,WACTL,EAAKO,GAAKrD,MAAMuD,OAAhB,UAA4BD,EAA5B,QACC5D,EAAIR,GAJD,GAkBViE,YAVmB,WACjB,IADwB,IAAD,WACdzD,GACPyD,YAAW,WACTL,EAAKpD,GAAGM,MAAMoD,gBAAkB,SAC3B,EAAJ1D,IAHIA,EAAI,EAAGA,EAAIoD,EAAKxB,OAAQ5B,IAAM,EAA9BA,GAMTyD,YAAW,kBAAMlE,GAAY,KAAQ,OAGfC,EAAQ2D,EAAIvB,OAAU,EAAI5B,IC6BrC8D,EApDF,WAAO,IAAD,EACmB3E,mBAAS,IAD5B,mBACVsC,EADU,KACE/B,EADF,KAGX0D,EAAO,GA6Bb,OACE,yBAAK3C,UAAWF,IAAOuD,MACrB,kBAAC,EAAD,CAAQpE,cAAeA,EAAeC,KA7B7B,SAACoE,EAAKvE,EAAOD,GACxB,IAAIoC,EAAa,GAEjB,OAAQoC,GACN,IAAK,MACHpC,EAAaH,EAAWC,GACxByB,EAAQvB,EAAYyB,EAAM5D,EAAOD,GACjC,MACF,IAAK,MACHoC,EAAaI,EAAcN,GAC3ByB,EAAQvB,EAAYyB,EAAM5D,EAAOD,GACjC,MACF,IAAK,MACHoC,EAAaG,EAAcL,GAC3ByB,EAAQvB,EAAYyB,EAAM5D,EAAOD,GACjC,MACF,IAAK,KACHoC,EAAac,EAAUhB,GACvByB,EAAQvB,EAAYyB,EAAM5D,EAAOD,GACjC,MACF,IAAK,MACHoC,EAAaK,EAAUP,GACvByB,EAAQvB,EAAYyB,EAAM5D,EAAOD,OASnC,yBAAKkB,UAAWF,IAAOyD,iBACpBvC,EAAWwC,KAAI,SAACF,EAAKJ,GAAN,OACd,yBACElD,UAAWF,IAAOkB,WAClByC,IAAK,SAAAC,GAAE,OAAIf,EAAKnD,KAAKkE,IACrB7D,MAAO,CACLuD,OAAO,GAAD,OAAKE,EAAL,MACNK,MAAM,GAAD,OAAM,IAAM3C,EAAWG,OAAU,EAAjC,OAEPyC,IAAKV,UChDFW,MAJf,WACE,OAAO,kBAAC,EAAD,OCCTC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b23e3e3f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__5--y1\",\"heading\":\"NavBar_heading__1AkXY\",\"text\":\"NavBar_text__2ik6j\",\"navigation\":\"NavBar_navigation__3RyC4\",\"s\":\"NavBar_s__3jPsR\",\"button\":\"NavBar_button__1459D\",\"disabled\":\"NavBar_disabled__mwI49\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__1VR66\",\"Main__container\":\"Main_Main__container__3ue_t\",\"inputArray\":\"Main_inputArray__1SxdJ\"};","export const generateRandomNumbers = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\nexport function generateNewInput(inputRange) {\r\n  const t = [];\r\n  for (let i = 0; i < inputRange; i++) t.push(generateRandomNumbers(10, 500));\r\n  return t;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { generateNewInput } from \"./utility/util\";\r\nimport styles from \"./NavBar.module.css\";\r\n\r\nconst NavBar = props => {\r\n  const [inputRange, setInputRange] = useState(50);\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [speed, setSpeed] = useState(798.5);\r\n  const { setInputArray, sort } = props;\r\n\r\n  console.log(speed);\r\n\r\n  const handleInputRange = e => {\r\n    setInputRange(e.target.value);\r\n  };\r\n\r\n  const shuffle = () => {\r\n    const t = generateNewInput(inputRange);\r\n    setInputArray(t);\r\n  };\r\n\r\n  useEffect(() => {\r\n    shuffle();\r\n  }, [inputRange]);\r\n\r\n  const trigger = name => {\r\n    setDisabled(true);\r\n    sort(name, 800 - speed, setDisabled);\r\n  };\r\n\r\n  const style = disabled ? styles.disabled : styles.button;\r\n\r\n  return (\r\n    <div className={styles.NavBar}>\r\n      <h2 className={styles.text}>Sorting Visualizer</h2>\r\n      <div className={styles.heading}>\r\n        <button className={style} onClick={shuffle}>\r\n          Shuffle\r\n        </button>\r\n\r\n        <div className={styles.input}>\r\n          <label className={styles.s} htmlFor=\"range\">\r\n            Array size\r\n          </label>\r\n          <input\r\n            className={styles.s}\r\n            id=\"range\"\r\n            disabled={disabled}\r\n            type=\"range\"\r\n            min=\"10\"\r\n            max=\"250\"\r\n            value={inputRange}\r\n            step=\"10\"\r\n            onChange={handleInputRange}\r\n          />\r\n          <label className={styles.s} htmlFor=\"speed\">\r\n            Speed\r\n          </label>\r\n          <input\r\n            className={styles.s}\r\n            id=\"speed\"\r\n            type=\"range\"\r\n            min=\"600\"\r\n            max=\"900\"\r\n            step=\"100\"\r\n            value={speed}\r\n            disabled={disabled}\r\n            onChange={e => setSpeed(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <nav className={styles.navigation}>\r\n        <button className={style} onClick={() => trigger(\"ble\")}>\r\n          Bubble Sort\r\n        </button>\r\n        <button className={style} onClick={() => trigger(\"ins\")}>\r\n          Insertion Sort\r\n        </button>\r\n        <button className={style} onClick={() => trigger(\"slt\")}>\r\n          Selection Sort\r\n        </button>\r\n        <button className={style} onClick={() => trigger(\"qk\")}>\r\n          Quick Sort\r\n        </button>\r\n        <button className={style} onClick={() => trigger(\"mrg\")}>\r\n          Merge Sort\r\n        </button>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","const BubbleSort = inputArray => {\r\n  const newArray = [...inputArray];\r\n  let animations = [];\r\n\r\n  for (let i = 0; i < newArray.length; i++) {\r\n    for (var j = 0; j < newArray.length - i - 1; j++) {\r\n      //check (change color)\r\n      animations.push([\"comparision\", j, j + 1]);\r\n      //reset back to same color if no swap occurs\r\n      animations.push([\"reset\", j, j + 1]);\r\n\r\n      if (newArray[j] > newArray[j + 1]) {\r\n        animations.push([\"swap\", j, newArray[j + 1]]);\r\n        animations.push([\"swap\", j + 1, newArray[j]]);\r\n\r\n        const t = newArray[j];\r\n        newArray[j] = newArray[j + 1];\r\n        newArray[j + 1] = t;\r\n      }\r\n    }\r\n  }\r\n  return animations;\r\n};\r\n\r\nexport default BubbleSort;\r\n","const SelectionSort = inputArray => {\r\n  const newArray = [...inputArray];\r\n  const animations = [];\r\n\r\n  for (let i = 0; i < newArray.length - 1; i++) {\r\n    let min = i;\r\n\r\n    for (let j = i + 1; j < newArray.length; j++) {\r\n      //check (change color)\r\n      animations.push([\"comparision\", min, j]);\r\n      //reset back to same color if no swap occurs\r\n      animations.push([\"reset\", min, j]);\r\n\r\n      if (newArray[min] > newArray[j]) min = j;\r\n    }\r\n\r\n    animations.push([\"swap\", i, newArray[min]]);\r\n    animations.push([\"swap\", min, newArray[i]]);\r\n\r\n    let t = newArray[min];\r\n    newArray[min] = newArray[i];\r\n    newArray[i] = t;\r\n  }\r\n\r\n  return animations;\r\n};\r\n\r\nexport default SelectionSort;\r\n","const InsertionSort = inputArray => {\r\n  const newArray = [...inputArray];\r\n  let animations = [];\r\n\r\n  for (let i = 1; i < newArray.length; i++) {\r\n    let j = i - 1;\r\n\r\n    //check (change color)\r\n    animations.push([\"comparision\", i, j]);\r\n    //reset back to same color if no swap occurs\r\n    animations.push([\"reset\", i, j]);\r\n\r\n    if (newArray[j] > newArray[i]) {\r\n      animations.push([\"swap\", i, newArray[j]]);\r\n      animations.push([\"swap\", j, newArray[i]]);\r\n\r\n      const t = newArray[j];\r\n      newArray[j] = newArray[i];\r\n      newArray[i] = t;\r\n\r\n      while (j > 0) {\r\n        animations.push([\"comparision\", j, j - 1]);\r\n\r\n        animations.push([\"reset\", j, j - 1]);\r\n\r\n        if (newArray[j] < newArray[j - 1]) {\r\n          animations.push([\"swap\", j, newArray[j - 1]]);\r\n          animations.push([\"swap\", j - 1, newArray[j]]);\r\n\r\n          const t = newArray[j];\r\n          newArray[j] = newArray[j - 1];\r\n          newArray[j - 1] = t;\r\n        } else break;\r\n        j--;\r\n      }\r\n    }\r\n  }\r\n  return animations;\r\n};\r\n\r\nexport default InsertionSort;\r\n","const MergeSort = inputArray => {\r\n  let newArray = [...inputArray];\r\n  let animations = [];\r\n\r\n  function mergesort(arr, start, end) {\r\n    if (start < end) {\r\n      const middle = Math.floor((start + end) / 2);\r\n      mergesort(arr, start, middle);\r\n      mergesort(arr, middle + 1, end);\r\n\r\n      merge(arr, start, middle, end);\r\n    }\r\n  }\r\n\r\n  function merge(arr, start, middle, end) {\r\n    let i = start,\r\n      j = middle + 1;\r\n    let result = [];\r\n\r\n    while (i <= middle && j <= end) {\r\n      //check (change color)\r\n      animations.push([\"comparision\", i, j]);\r\n      //reset back to same color if no swap occurs\r\n      animations.push([\"reset\", i, j]);\r\n\r\n      if (arr[i] < arr[j]) result.push(arr[i++]);\r\n      else result.push(arr[j++]);\r\n    }\r\n\r\n    for (; i <= middle; i++) {\r\n      //check (change color)\r\n      animations.push([\"comparision\", i, i]);\r\n      //reset back to same color if no swap occurs\r\n      animations.push([\"reset\", i, i]);\r\n      result.push(arr[i]);\r\n    }\r\n    for (; j <= end; j++) {\r\n      //check (change color)\r\n      animations.push([\"comparision\", j, j]);\r\n      //reset back to same color if no swap occurs\r\n      animations.push([\"reset\", j, j]);\r\n      result.push(arr[j]);\r\n    }\r\n\r\n    for (let k = start, j = 0; k <= end; k++, j++) {\r\n      animations.push([\"comparision\", k, j]);\r\n      animations.push([\"replace \", k, result[j]]);\r\n      animations.push([\"comparision\", k, j]);\r\n      arr[k] = result[j];\r\n    }\r\n  }\r\n\r\n  mergesort(newArray, 0, newArray.length - 1);\r\n  return animations;\r\n};\r\n\r\nexport default MergeSort;\r\n","import { generateRandomNumbers } from \"../utility/util\";\r\n\r\nconst QuickSort = inputArray => {\r\n  const newArray = [...inputArray];\r\n  let animations = [];\r\n\r\n  function quickSort(newArray, start, end) {\r\n    let pivot;\r\n    if (start < end) {\r\n      pivot = partition(newArray, start, end);\r\n      quickSort(newArray, start, pivot - 1);\r\n      quickSort(newArray, pivot + 1, end);\r\n    }\r\n  }\r\n\r\n  function partition(newArray, start, end) {\r\n    let pivot = generateRandomNumbers(start, end);\r\n\r\n    animations.push([\"comparision\", pivot, end]);\r\n    animations.push([\"swap\", pivot, newArray[end]]);\r\n    animations.push([\"swap\", end, newArray[pivot]]);\r\n    animations.push([\"reset\", pivot, end]);\r\n    swap(newArray, pivot, end);\r\n\r\n    let tail = start;\r\n\r\n    for (let i = start; i < end; ++i) {\r\n      animations.push([\"comparision\", i, end]);\r\n      animations.push([\"reset\", i, end]);\r\n\r\n      if (newArray[i] <= newArray[end]) {\r\n        animations.push([\"comparision\", i, tail]);\r\n        animations.push([\"swap\", i, newArray[tail]]);\r\n        animations.push([\"swap\", tail, newArray[i]]);\r\n        animations.push([\"reset\", i, tail]);\r\n        swap(newArray, i, tail);\r\n        tail++;\r\n      }\r\n    }\r\n\r\n    animations.push([\"comparision\", tail, end]);\r\n    animations.push([\"swap\", end, newArray[tail]]);\r\n    animations.push([\"swap\", tail, newArray[end]]);\r\n    animations.push([\"reset\", tail, end]);\r\n\r\n    swap(newArray, tail, end);\r\n    return tail;\r\n  }\r\n\r\n  function swap(newArray, firstIndex, secondIndex) {\r\n    let temp = newArray[firstIndex];\r\n    newArray[firstIndex] = newArray[secondIndex];\r\n    newArray[secondIndex] = temp;\r\n  }\r\n\r\n  quickSort(newArray, 0, newArray.length - 1);\r\n  return animations;\r\n};\r\n\r\nexport default QuickSort;\r\n","export const animate = function (ani, divs, speed, setDisabled) {\r\n  for (var i = 0; i < ani.length; i++) {\r\n    const [str] = ani[i];\r\n\r\n    if (str === \"comparision\" || str === \"reset\") {\r\n      const [, idx1, idx2] = ani[i];\r\n\r\n      let color;\r\n      if (str === \"comparision\") color = \"darkorange\";\r\n      else if (str === \"reset\") color = \"lightgreen\";\r\n\r\n      setTimeout(() => {\r\n        divs[idx1].style.backgroundColor = color;\r\n        divs[idx2].style.backgroundColor = color;\r\n      }, i * speed);\r\n    } else {\r\n      const [, idx, heights] = ani[i];\r\n      setTimeout(() => {\r\n        divs[idx].style.height = `${heights}px`;\r\n      }, i * speed);\r\n    }\r\n  }\r\n\r\n  const resetColor = () => {\r\n    for (let i = 0; i < divs.length; i++) {\r\n      setTimeout(() => {\r\n        divs[i].style.backgroundColor = \"pink\";\r\n      }, i * 7);\r\n    }\r\n\r\n    setTimeout(() => setDisabled(false), 1000);\r\n  };\r\n\r\n  setTimeout(resetColor, (speed * ani.length) / 2 + i);\r\n};\r\n","import React, { useState } from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport styles from \"./Main.module.css\";\r\nimport BubbleSort from \"./algo/BubbleSort\";\r\nimport SelectionSort from \"./algo/SelectionSort\";\r\nimport InsertionSort from \"./algo/InsertionSort\";\r\nimport MergeSort from \"./algo/MergeSort\";\r\nimport QuickSort from \"./algo/QuickSort\";\r\nimport { animate } from \"./Animate\";\r\n\r\nconst Main = () => {\r\n  const [inputArray, setInputArray] = useState([]);\r\n\r\n  const divs = [];\r\n\r\n  const sort = (val, speed, setDisabled) => {\r\n    let animations = [];\r\n\r\n    switch (val) {\r\n      case \"ble\":\r\n        animations = BubbleSort(inputArray);\r\n        animate(animations, divs, speed, setDisabled);\r\n        break;\r\n      case \"ins\":\r\n        animations = InsertionSort(inputArray);\r\n        animate(animations, divs, speed, setDisabled);\r\n        break;\r\n      case \"slt\":\r\n        animations = SelectionSort(inputArray);\r\n        animate(animations, divs, speed, setDisabled);\r\n        break;\r\n      case \"qk\":\r\n        animations = QuickSort(inputArray);\r\n        animate(animations, divs, speed, setDisabled);\r\n        break;\r\n      case \"mrg\":\r\n        animations = MergeSort(inputArray);\r\n        animate(animations, divs, speed, setDisabled);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.Main}>\r\n      <NavBar setInputArray={setInputArray} sort={sort} />\r\n\r\n      <div className={styles.Main__container}>\r\n        {inputArray.map((val, idx) => (\r\n          <div\r\n            className={styles.inputArray}\r\n            ref={el => divs.push(el)}\r\n            style={{\r\n              height: `${val}px`,\r\n              width: `${(100 / inputArray.length) * 7}px`,\r\n            }}\r\n            key={idx}></div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport Main from \"./components/Main\";\r\n\r\nfunction App() {\r\n  return <Main />;\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}